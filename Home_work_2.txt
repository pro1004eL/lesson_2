"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "29",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Anton",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/new_data",
					"host": [
						"{{url}}"
					],
					"path": [
						"new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Checking the status of the code",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//The answer indicates the multiplication coefficients weight, write tests to check the correctness of the result of multiplication by the coefficient",
							"pm.test(\"Food_and_sleep\", function () { \r",
							"let weight = pm.variables.get(\"weight\");\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.daily_sleep).to.eq(weight*2.5);\r",
							"pm.expect(jsonData.daily_food).to.eq(weight*0.012);\r",
							"}); \r",
							"\r",
							"//Checking json structure in response",
							"pm.test(\"Schema\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"object\");\r",
							"    pm.expect(jsonData.age).to.be.an(\"Number\");\r",
							"    pm.expect(jsonData.daily_food).to.be.an(\"Number\");\r",
							"    pm.expect(jsonData.daily_sleep).to.be.an(\"Number\");\r",
							"    pm.expect(jsonData.name).to.be.an(\"String\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
		}